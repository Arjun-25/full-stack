package com.cognizant.entity;
// Generated Jun 29, 2017 11:26:54 AM by Hibernate Tools 5.2.3.Final

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.Valid;
import javax.validation.constraints.Future;
import javax.validation.constraints.Max;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Past;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotEmpty;
import org.hibernate.validator.constraints.Range;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * HomeLoanDetails generated by hbm2java
 */
@Entity
@Table(name = "home_loan_details", catalog = "Bank_Management")
public class HomeLoanDetails implements java.io.Serializable {

//	private static final long serialVersionUID = 74381982562784024L;
	private String homeLoanId;
	//private Long accountNumber;
	
	private Long homeLoanAccountNumber;
	
	
	@Range(min=1, max=16, message = "Please enter 16 or less than 16 digits")
	private Long loanAmount;
	
	@NotNull
	@Future(message = "Do you have Time Machine to go back in PAST!!")
	@DateTimeFormat(pattern = "MM/dd/yyyy")
	//@Temporal(TemporalType.DATE)
	private Date loanApplyDate;
	
	
	@Range(min=1, max=2, message = "Please enter 2 or less than 2 digits")
	private Long loanDuration;
	
	
	@Range(min=1, max=16, message = "Please enter 16 or less than 16 digits")
	private Long annualIncome;
	
	@NotEmpty
	@Size(max=5,message = "Please enter less than 5 alphabets")
	@Pattern(regexp ="[a-zA-Z]+", message = "Please enter only alphabets")
	private String compName;
	
	@NotEmpty
	@Size(max=5, message = "Please enter less than 5 alphabets" )
	@Pattern(regexp ="[a-zA-Z]+", message = "Please enter only alphabets")
	private String designation;
	
	
	@Range(min=1, max=2, message = "Please enter 2 or less than 2 digits")
	private Long totalExp;
	
	
	@Range(min=1, max=2, message = "Please enter 2 or less than 2 digits")
	private Long expCurrentComp;
	
	@Valid
	private UserDetails userDetails;

	public HomeLoanDetails() {
	}

	public HomeLoanDetails(String homeLoanId) {
		this.homeLoanId = homeLoanId;
	}
	
	public HomeLoanDetails(String homeLoanId, Long accountNumber, Long loanAmount,Long homeLoanAccountNumber,
			Date loanApplyDate, Long loanDuration, Long annualIncome, String compName, String designation,
			Long totalExp, Long expCurrentComp) {
		this.homeLoanId = homeLoanId;
		//this.accountNumber = accountNumber;
		this.homeLoanAccountNumber = homeLoanAccountNumber;
		this.loanAmount = loanAmount;
		this.loanApplyDate = loanApplyDate;
		this.loanDuration = loanDuration;
		this.annualIncome = annualIncome;
		this.compName = compName;
		this.designation = designation;
		this.totalExp = totalExp;
		this.expCurrentComp = expCurrentComp;
	}
	
	@Column(name = "HOME_LOAN_ID", unique = true, nullable = false, length = 16)
	public String getHomeLoanId() {
		return this.homeLoanId;
	}

	public void setHomeLoanId(String homeLoanId) {
		this.homeLoanId = homeLoanId;
	}

	/*@Column(name = "ACCOUNT_NUMBER")
	public Long getAccountNumber() {
		return this.accountNumber;
	}

	public void setAccountNumber(Long accountNumber) {
		this.accountNumber = accountNumber;
	}*/
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "HOME_LOAN_ACCOUNT_NUMBER", length = 16)
	public Long getHomeLoanAccountNumber() {
		return this.homeLoanAccountNumber;
	}

	public void setHomeLoanAccountNumber(Long homeLoanAccountNumber) {
		this.homeLoanAccountNumber = homeLoanAccountNumber;
	}

	@Column(name = "LOAN_AMOUNT")
	public Long getLoanAmount() {
		return this.loanAmount;
	}

	public void setLoanAmount(Long loanAmount) {
		this.loanAmount = loanAmount;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "LOAN_APPLY_DATE", length = 10)
	public Date getLoanApplyDate() {
		return this.loanApplyDate;
	}

	public void setLoanApplyDate(Date loanApplyDate) {
		this.loanApplyDate = loanApplyDate;
	}

	@Column(name = "LOAN_DURATION")
	public Long getLoanDuration() {
		return this.loanDuration;
	}

	public void setLoanDuration(Long loanDuration) {
		this.loanDuration = loanDuration;
	}

	@Column(name = "ANNUAL_INCOME")
	public Long getAnnualIncome() {
		return this.annualIncome;
	}

	public void setAnnualIncome(Long annualIncome) {
		this.annualIncome = annualIncome;
	}

	@Column(name = "COMP_NAME", length = 30)
	public String getCompName() {
		return this.compName;
	}

	public void setCompName(String compName) {
		this.compName = compName;
	}

	@Column(name = "DESIGNATION", length = 30)
	public String getDesignation() {
		return this.designation;
	}

	public void setDesignation(String designation) {
		this.designation = designation;
	}

	@Column(name = "TOTAL_EXP")
	public Long getTotalExp() {
		return this.totalExp;
	}

	public void setTotalExp(Long totalExp) {
		this.totalExp = totalExp;
	}

	@Column(name = "EXP_CURRENT_COMP")
	public Long getExpCurrentComp() {
		return this.expCurrentComp;
	}

	public void setExpCurrentComp(Long expCurrentComp) {
		this.expCurrentComp = expCurrentComp;
	}
	
	@ManyToOne(cascade = CascadeType.ALL) 
	@JoinColumn(name="ACCOUNT_NUMBER")
	public UserDetails getUserDetails() {
		return userDetails;
	}

	public void setUserDetails(UserDetails userDetails) {
		this.userDetails = userDetails;
	}

}
